-- Ensure the game is loaded, the player is present, and their character is loaded
repeat wait() until game:IsLoaded and (game.Players.LocalPlayer or game.Players.PlayerAdded:Wait()) and (game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait())

-- Check if the script has already run
if getgenv().Ran then
    return
else
    getgenv().Ran = true
end

-- Set the player's team to "Pirates" using a remote call
game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("SetTeam", "Pirates")

-- Modify the appearance of the team selection button
spawn(function()
    repeat wait() until game.Players.LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame:FindFirstChild("TextButton")
    local textButton = game.Players.LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton

    textButton.Size = UDim2.new(0, 10000, 0, 10000)
    textButton.Position = UDim2.new(-4, 0, -5, 0)
    textButton.BackgroundTransparency = 1
end)

-- Wait for changes to take effect and simulate mouse clicks
wait(1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(500, 500, 0, true, game, 1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(500, 500, 0, false, game, 1)
wait(1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(500, 500, 0, true, game, 1)
game:GetService("VirtualInputManager"):SendMouseButtonEvent(500, 500, 0, false, game, 1)

-- Wait for the player's character to appear in the workspace
repeat wait(1) until game.Workspace:FindFirstChild(game.Players.LocalPlayer.Name)

-- Display a warning message
warn("Test")

local plr = game.Players.LocalPlayer
local chr = plr.Character
local t = game.TweenService
local bv = Instance.new("BodyVelocity")
bv.MaxForce = Vector3.new(1/0, 1/0, 1/0)
bv.Velocity = Vector3.new()
bv.Name = "bV"
local bav = Instance.new("BodyAngularVelocity")
bav.AngularVelocity = Vector3.new()
bav.MaxTorque = Vector3.new(1/0, 1/0, 1/0)
bav.Name = "bAV"
for _,v in next, workspace:GetChildren() do
    if v.Name:find("Fruit") and (v:IsA("Tool") or v:IsA("Model")) then
        repeat
            local anc1 = bv:Clone()
            anc1.Parent = chr.HumanoidRootPart
            local anc2 = bav:Clone()
            anc2.Parent = chr.HumanoidRootPart
            local p = t:Create(chr.HumanoidRootPart, TweenInfo.new((plr:DistanceFromCharacter(v.Handle.Position)-100)/320, Enum.EasingStyle.Linear), {CFrame=v.Handle.CFrame + Vector3.new(0, v.Handle.Size.Y, 0)})
            p:Play()
            p.Completed:Wait()
            chr.HumanoidRootPart.CFrame = v.Handle.CFrame
            anc1:Destroy()
            anc2:Destroy()
            wait(1)
        until v.Parent ~= workspace
        wait(1)
        local fruit = chr:FindFirstChildOfClass("Tool") and chr:FindFirstChildOfClass("Tool").Name:find("Fruit") and chr:FindFirstChildOfClass("Tool") or (function()
            for _,fr in plr.Backpack:GetChildren() do
                if fr.Name:find("Fruit") then
                    return fr
                end
            end
        end)()
        print(fruit)
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit", fruit:GetAttribute("OriginalName"), fruit)
    end
end
print('nope')
local function teleport()
    local currentJobId = game.JobId
    repeat
        task.spawn(function()
            local servers = game:GetService("ReplicatedStorage").__ServerBrowser:InvokeServer(math.random(1, 100))
            local targetServer = servers and servers[math.random(1, #servers)]

            if targetServer then
                game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer, targetServer)
            end
        end)
        wait(2)
    until game.JobId ~= currentJobId
end

teleport()
